// Version: 3
// Before changing the version, read the instructions in the en-us.cfg file!
// Author: rfelipe200
// Last updated: 09/18/2018
Localization
{
	pt-br
	{

		// ********** Part: KAS.CH1

		#KAS_CH1_Part_title = Gancho de Cabo CH-1
		#KAS_CH1_Part_manufacturer = Laboratórios SAK ltda.
		#KAS_CH1_Part_description = Um gancho no qual um cabo pode ser preso. É a outra metade da solução "manter-essas-coisas-juntas".
		#KAS_CH1_Part_tags = KIS KAS cable rope tie cck-kas

		// ********** Part: KAS.JS1

		#KAS_JS1_Part_title = Soquete de Junta JS-1
		#KAS_JS1_Part_manufacturer = Laboratórios SAK ltda.
		#KAS_JS1_Part_description = Esta junta multiuso tem uma variedade de funções: ela permite uma conexão firme e transferência de recursos! Um engenheiro certificado com muitos anos de experiência é necessário para instalar o soquete, mas uma vez preso, até um zelador pode usá-lo para conectar naves.
		#KAS_JS1_Part_tags = KIS KAS pipe tube cck-kas

		// ********** Part: KAS.PCB1

		#KAS_PCB1_Part_title = Reforço de Cabo Portátil PCB-1
		#KAS_PCB1_Part_manufacturer = Laboratórios SAK ltda.
		#KAS_PCB1_Part_description = É um simples guincho manualmente operado com uma pequena bobina de cabo de aço, que permite conectar coisas contanto que não estejam muito longe. Entretanto, deve existir um gancho na outra nave no qual prender o cabo, então este guincho apenas resolve metade do problema.
		#KAS_PCB1_Part_tags = KIS KAS cable rope tie cck-kas
		#KAS_PCB1_Part_LinkBreak = Desconectar
		#KAS_PCB1_Part_LinkStart = Conectar

		// ********** Part: KAS.PortPylon

		#KAS_PortPylon_Part_title = Pylon GP-20
		#KAS_PortPylon_Part_manufacturer = Laboratórios SAK ltda.
		#KAS_PortPylon_Part_description = Nossa linha de produtos RTS-1 Foi um grande sucesso! Entretanto, tivemos algumas reclamações; no fim das contas, às vezes o cano não é longo o suficiente! Para resolver esse problema, uma nova peça foi desenvolvida: um pylon leve com um soquete de cano integrado, permitindo que seja usado como extensor. Portanto é possível encadear linhas de recursos por longas distãncias, embora ao fazer isso, você deva precisar de pylons adicionais. Jebediah realmente queria botar uma geladeira de Kerba-Cola no interior oco, mas a P&D teve que rejeitar sua sugestão devido ao limite de massa estrito de 20kg.
		#KAS_PortPylon_Part_tags = KAS resource fuel transfer cck-kas

		// ********** Part: KAS.PortPylonPwr

		#KAS_PortPylonPwr_Part_title = Pylon Bombado BGP-400
		#KAS_PortPylonPwr_Part_manufacturer = Laboratórios SAK ltda.
		#KAS_PortPylonPwr_Part_description = O desenho desta peça foi inspirado pelo GP-20. Nossos engenheiros precisavam saber: o volume interno do pylon realmente poderia ser utilizado? E no fim das contas, ele pode! Então, eles decidiram enchê-lo com algumas baterias Z-100 e um módulo de controle simples. Não é tão legal quanto uma geladeira de Kerba-Cola, como Jebediah pediu, mas ainda é muito prático. Garantimos que as baterias são da melhor qualidade, e não meramente resgatadas da reciclagem.
		#KAS_PortPylonPwr_Part_tags = KAS resource fuel transfer cck-kas

		// ********** Part: KAS.RTS1

		#KAS_RTS1_Part_title = Estação de Transferência de Recursos RTS-1
		#KAS_RTS1_Part_manufacturer = Laboratórios SAK ltda.
		#KAS_RTS1_Part_description = Este cano permite a transferência de recursos entre naves. O diâmetro não é nada impressionante, mas como um carinha verde disse uma vez, "o tamanho não importa". Nossa tecnologia patenteada permite a transferência de qualquer coisa por ela, incluindo mas não somente: pedras, combustível, lanches, e até kerbals - o que quebra a garantia.
		#KAS_RTS1_Part_tags = KIS KAS resource fuel transfer cck-kas

		// ********** Part: KAS.TB60

		#KAS_TB60_Part_title = Barra de Reboque TB-60
		#KAS_TB60_Part_manufacturer = Laboratórios SAK ltda.
		#KAS_TB60_Part_description = Uma solução simples para rebocar uma nave que não pode se mover sozinha. Se uma corda simples fosse usada, então a nave sendo rebocada provavelmente bateria no reboque ao freiar ou manobrar, mas com uma barra de reboque esse não é o caso. Além disso, ela pode ajudar a virar a nave rebocada, se possível. Assegure-se manter as baterias carregadas, senão a manobragem ativa não vai funcionar.
		#KAS_TB60_Part_tags = KIS KAS pipe tube tow towbar cck-kas
		#KAS_TB60_Part_LinkBreak = Desconectar naves
		#KAS_TB60_Part_LinkStart = Prender a uma nave
		#KAS_TB60_Part_Park_Forward = Park: FRENTE
		#KAS_TB60_Part_Park_Up = Park: CIMA

		// ********** Part: KAS.TJ1

		#KAS_TJ1_Part_title = Junta Telescópica Fixa TJ-1
		#KAS_TJ1_Part_manufacturer = Laboratórios SAK ltda.
		#KAS_TJ1_Part_description = Esta simples estrutura telescópica pode conectar rigidamente duas naves. A distância máxima de conexão é razoavelmente curta, mas sua força é adequada. O desenho foi inspirado por um pau de selfie que Jeb comprou na feirinha.
		#KAS_TJ1_Part_tags = KIS KAS pipe tube cck-kas
		#KAS_TJ1_Part_LinkBreak = Desconectar naves
		#KAS_TJ1_Part_LinkStart = Prender a uma nave
		#KAS_TJ1_Part_Park_Down = Park: BAIXO
		#KAS_TJ1_Part_Park_Forward = Park: FRENTE
		#KAS_TJ1_Part_Park_Up = Park: CIMA

		// ********** Part: KAS.TJ2

		#KAS_TJ2_Part_title = Junta Telescópica Livre TJ-2
		#KAS_TJ2_Part_manufacturer = Laboratórios SAK ltda.
		#KAS_TJ2_Part_description = É o mesmo pau-de-selfie TJ-1, exceto pelas dobradiças destravadas. De fato a melhor opção para manter naves conectadas afastadas sem restringir muito seus movimentos.
		#KAS_TJ2_Part_tags = KIS KAS pipe tube cck-kas
		#KAS_TJ2_Part_LinkBreak = Desconectar naves
		#KAS_TJ2_Part_LinkStart = Prender a uma nave
		#KAS_TJ2_Part_Park_Down = Park: BAIXO
		#KAS_TJ2_Part_Park_Forward = Park: FRENTE
		#KAS_TJ2_Part_Park_Up = Park: CIMA

		// ********** Part: KAS.W1

		#KAS_W1_Part_title = Guincho W-50
		#KAS_W1_Part_manufacturer = Laboratórios SAK ltda.
		#KAS_W1_Part_description = Um antigo sábio disse uma vez: "Me dê o soquete certo, e com um guicho puxarei Kerbin". Este guincho não é tão forte assim, mas ele pode levantar ou rebocar uma nave bem grandinha. Lembre-se de prender um soquete compatível na nave alvo. Além disso, garanta que a nave ativa tenha energia o suficiente: o guincho tem fome de eletricidade!
		#KAS_W1_Part_tags = KIS KAS winch cable connector cck-kas

		// ********** Part: KAS.W2

		#KAS_W2_Part_title = Guincho HW-80
		#KAS_W2_Part_manufacturer = Laboratórios SAK ltda.
		#KAS_W2_Part_description = Uma versão pesada do W-50. Ela tem cabeamento extra e uma força de conexão melhor. Entretanto, ela ainda é incapaz de puxar Kerbin. Nota: garantia nula se usada por gansos para guinchar ganchos, não importa se o ganso guincha o gancho ou o gancho engancha o ganso.
		#KAS_W2_Part_tags = KIS KAS winch cable connector heavyduty cck-kas

		// ********** Type: KAS.AbstractJoint, KSPDev Messages

		// Message to display when the link cannot be established because it's too short.
		// Argument <<1>> is the current link length of type DistanceType.
		// Argument <<2>> is the part's config setting of type DistanceType.
		// Example usage:
		// Link is too short: 1.22 m < 2.33 m
		#kasLOC_00000 = Ligação curta demais: <<1>> < <<2>>
		// Message to display when the link cannot be established because it's too long.
		// Argument <<1>> is the current link length of type DistanceType.
		// Argument <<2>> is the part's config setting of type DistanceType.
		// Example usage:
		// Link is too long: 2.33 m > 1.22 m
		#kasLOC_00001 = Ligação longa demais: <<1>> > <<2>>
		// Message to display when the link cannot be established because the maximum angle
		// between the link vector and the joint normal at the SOURCE part is to big.
		// Argument <<1>> is the current link angle of type AngleType.
		// Argument <<2>> is the part's config setting of type AngleType.
		// Example usage:
		// Source angle limit reached: 3° > 2.5°
		#kasLOC_00002 = Limite do ângulo na fonte alcançado: <<1>> > <<2>>
		// Message to display when the link cannot be established because the maximum angle
		// between the link vector and the joint normal at the TARGET part is to big.
		// Argument <<1>> is the current link angle of type AngleType.
		// Argument <<2>> is the part's config setting of type AngleType.
		// Example usage:
		// Target angle limit reached: 3° > 2.5°
		#kasLOC_00003 = Limite do ângulo no alvo alcançado: <<1>> > <<2>>
		// Info string in the editor for the link break force setting. The argument is of
		// type ForceType.
		// Example usage:
		// Link break force: 1.2 kN
		#kasLOC_00004 = Força de ruptura da ligação: <<1>>
		// Info string in the editor for the link break torque setting. The argument is of
		// type ForceType.
		// Example usage:
		// Link torque force: 1.2 kN
		#kasLOC_00005 = Torque de ruptura da ligação: <<1>>
		// Info string in the editor for the minimum link length setting.
		// Argument <<1>> is the part's config setting of type DistanceType.
		// Example usage:
		// Minimum link length: 1.22 m
		#kasLOC_00006 = Comprimento mínimo da ligação: <<1>>
		// Info string in the editor for the maximum link length setting.
		// Argument <<1>> is the part's config setting of type DistanceType.
		// Example usage:
		// Maximum link length: 1.22 m
		#kasLOC_00007 = Comprimento máximo da ligação: <<1>>
		// Info string in the editor for the maximum allowed angle at the source.
		// Argument <<1>> is the part's config setting of type AngleType.
		// Example usage:
		// Source angle limit: 1.2°
		#kasLOC_00008 = Limite de ângulo na fonte: <<1>>
		// Info string in the editor for the maximum allowed angle at the target.
		// Argument <<1>> is the part's config setting of type AngleType.
		// Example usage:
		// Target angle limit: 1.2°
		#kasLOC_00009 = Limite de ângulo no alvo: <<1>>
		// Title of the module to present in the editor details window.
		#kasLOC_00010 = Junta SAK

		// ********** Type: KAS.AbstractPipeRenderer, KSPDev Messages

		// Message to display when the link cannot be created due to an obstacle.
		// Argument <<1>> is the part that would collide with the proposed link.
		// Example usage:
		// Link collides with: Mk2 Cockpit
		#kasLOC_07000 = Ligação colide com: <<1>>
		// Message to display when the link strut orientation cannot be changed due to it
		// would hit the surface.
		#kasLOC_07001 = Ligação colide com a superfície

		// ********** Type: KAS.ControllerWinchRemote, KSPDev Messages

		// The title of the remote control dialog. It also gives a hint on the keyboard
		// sequence that brings the GUI up.
		// Argument <<1>> is the keyboard even of type KeyboardEventType.
		#kasLOC_11000 = Controle remoto do guincho (<<1>>)
		// The caption of the button that triggers cable release.
		#kasLOC_11001 = Soltar
		// The GUI hint to explain the effect of the release button.
		#kasLOC_11002 = Solta o conector e ajusta o comprimento do cabo para o máximo.
		// The caption of the button that stretches teeh cable.
		#kasLOC_11003 = Esticar
		// The GUI hint to explain the effect of the stretch button.
		#kasLOC_11004 = Ajusta o comprimento do cabo para a distância real.
		// The caption of the button that deatches the cable from the target.
		#kasLOC_11005 = Desencaixar
		// The GUI hint to explain the effect of the detach button.
		#kasLOC_11006 = Desencaixa o cabo da peça alvo.
		// The caption of the button that closes the GUI dialog.
		#kasLOC_11007 = Fechar
		// The GUI hint to explain the effect of the close button.
		#kasLOC_11008 = Fecha interface.
		// The caption for the toggle control (button style) which tells if the winch should
		// be highlighted in the scene. It's better keep the text as short as possible.
		#kasLOC_11009 = H
		// The GUI hint to explain the effect of toggling the control.
		#kasLOC_11010 = Destaca o guincho no cenário.
		// The text for the winch status in which it cannot be remotely operated for any
		// reason.
		#kasLOC_11011 = <color=red>Offline</color>
		// The GUI hint to explain the OFFLINE state.
		#kasLOC_11012 = Impossível contatar o guincho. A nave é controlável?
		// The text for the winch status that tells that the main winch attach node is
		// occupied by an incompatible (non-KAS) part.
		#kasLOC_11013 = <color=red>Bloqueada!</color>
		// The GUI hint to explain the BLOCKED state.
		#kasLOC_11014 = O nó de encaixe do guincho está bloqueado por outra peça.
		// The text for the winch status that tells that the cable connector is locked to
		// the winch, and the cable length is zero.
		#kasLOC_11015 = <color=#00ff00>Retraído!</color>
		// The GUI hint to explain the RETRACTED state.
		#kasLOC_11016 = O conector está travado no guincho.
		// The GUI hint of the button that triggers retracting of the cable. The cable will
		// be retracting until the motor status is changed or the connector get locked.
		#kasLOC_11017 = Iniciar retração do cabo
		// The GUI hint of the button that triggers deploying of the cable. The cable will
		// be deploying until the motor status is changed.
		#kasLOC_11018 = Iniciar extensão do cabo
		// The GUI hint of the button that retracts the cable. The cable will be retracting
		// as long as the button is pressed.
		#kasLOC_11019 = Retrair o cabo
		// The GUI hint of the button that extends the cable. The cable will be extending as
		// long as the button is pressed.
		#kasLOC_11020 = Estender o cabo
		// The GUI hint to show for the control that changes the motor speed. It's the
		// maximum speed which the motor can reach when retracting or extending the cable.
		#kasLOC_11021 = Velocidade máxima do motor
		// The GUI hint to show for the area which displays two values: the deployed cable
		// length and the real distance between the winch and the target (connector or
		// part). The values are presented as a pair, separated by symbol '/'.
		#kasLOC_11022 = O comprimento disposto/real do cabo
		// The GUI hint to show for the area which displays two values: the current motro
		// speed and the maximum possible motor speed. The values are presented as a pair,
		// separated by symbol '/'.
		#kasLOC_11023 = Velocidade atual do motor / Velocidade máxima
		// The string to present when the dialog is opened, but no KAS winches found in the
		// scene.
		#kasLOC_11024 = Nenhum guincho encontrado!
		// The formatter string for the cable lengths when the cable is *not* under strain.
		// I.e. its actual length is not greater than the winch allows.
		// Argument <<1>> is the length, allowed by the winch of type DistanceType.
		// Argument <<1>> is the real cable length of type DistanceType.
		#kasLOC_11025 = <<1>> / <<2>>
		// The formatter string for the cable lengths when the cable *is* under strain. I.e.
		// its actual length is greater than the winch allows.
		// Argument <<1>> is the length, allowed by the winch of type DistanceType.
		// Argument <<2>> is the real cable length of type DistanceType.
		#kasLOC_11026 = <<1>> / <color=magenta><<2>></color>
		// The formatter string for the winch motor speed.
		// Argument <<1>> is the current motor speed type VelocityType.
		// Argument <<2>> is the settings for the desired motor speed of type VelocityType.
		#kasLOC_11027 = <<1>> / <<2>>

		// ********** Type: KAS.KASJointCableBase, KSPDev Messages

		// Info string in the editor for the cable spring force setting.
		// Argument <<1>> is the force of type ForceType.
		// Example usage:
		// Spring force: 1.2 kN
		#kasLOC_09000 = Força da mola: <<1>>
		// Title of the module to present in the editor details window.
		#kasLOC_09001 = Cabo SAK

		// ********** Type: KAS.KASJointTowBar, KSP Events

		// A context menu event that starts the locking process on a linked vessel.
		#kasLOC_05014 = Iniciar travamento
		// A context menu event that disables the locking of the tow bar joints and turns
		// off the active steering mode.
		#kasLOC_05015 = Destravar juntas
		// A context menu event that enables the active steering mode.
		#kasLOC_05016 = Habilitar direção ativa
		// A context menu event that disables the active steering mode.
		#kasLOC_05017 = Desabilitar direção ativa

		// ********** Type: KAS.KASJointTowBar, KSP Fields

		// A context menu item that displays the current status of the bar locking.
		#kasLOC_05010 = Estado do travamento
		// A context menu item that displays the current steering status.
		#kasLOC_05011 = Estado da direção
		// A context menu item that displays and allows changing the strength of the
		// steering commands, that the tow bar sends to the linked vessel.
		#kasLOC_05012 = Sensibilidade da direção
		// A context menu item that displays and allows changing the direction of the
		// steering commands.
		#kasLOC_05013 = Direção da manobragem
		// The name of the active steering mode, in which the steering commands are sent to
		// the linked vessel in the exact form as they've emitted for the source vessel.
		#kasLOC_05018 = Normal
		// The name of the active steering mode, in which the steering commands are sent to
		// the linked vessel in the inverted form relative to the source vessel.
		#kasLOC_05019 = Invertida

		// ********** Type: KAS.KASJointTowBar, KSPDev Messages

		// Message to display when a tow bar is not locked but the locking process has been
		// started. The <<1>> argument shows the current locking error and is formatted as
		// an angle type.
		// Example usage:
		// Tow bar is locking: diff 1.5°
		#kasLOC_05000 = Barra de reboque travando: diff <<1>>
		// Message to display when a tow bar locking process successfully ends with locking.
		#kasLOC_05001 = A barra de reboque está TRAVADA!
		// A string in the context menu that tells that the active steering mode is not
		// enabled.
		#kasLOC_05002 = Desabilitada
		// A string in the context menu that tells that the active steering mode is ready
		// and working.
		#kasLOC_05003 = Ativa
		// A string in the context menu that tells that the active steering mode cannot work
		// due to the bar's target vessel is currently under player's control.
		#kasLOC_05004 = Alvo é a nave ativa
		// A string in the context menu that tells that the active steering mode cannot work
		// due to the linked vessel is remotely controlled.
		#kasLOC_05005 = Alvo incontrolável
		// A string in the context menu that tells that the active steering mode is
		// activated but cannot start working due to the constraints.
		#kasLOC_05006 = Não travado
		// A string in the context menu that tells that the bar joints are unlocked.
		#kasLOC_05007 = Desabilitado
		// A string in the context menu that tells that the bar joints are locked.
		#kasLOC_05008 = Travado
		// A string in the context menu that tells that the bar joints are unlocked but the
		// part is trying to lock them.
		#kasLOC_05009 = Travando

		// ********** Type: KAS.KASLinkResourceConnector, KSP Events

		// The context menu event that opens the resources transfer GUI.
		#kasLOC_12015 = Abrir interface

		// ********** Type: KAS.KASLinkResourceConnector, KSPDev Messages

		// The title of the resource transfer dialog.
		#kasLOC_12000 = Transferência de recursos
		// The resource in the transfer options table. Its main purpose is dealing with the
		// Lingoona modifiers, applied to the resource name.
		// Argument <<1>> is the full localized resource name with the Lingoona modifiers
		// (if any).
		#kasLOC_12001 = <<1>>
		// The string to present for a fuel mixture component.
		// Argument <<1>> is the percent ratio of the component in the mixture of type
		// PercentType.
		// Argument <<2>> is the abbreviated localized resource name with the
		// Lingoonamodifiers (if any).
		// Example usage:
		// 45 % Ox
		#kasLOC_12002 = <<1>> <<2>>
		// The status string saying current and maximum amounts of the resource in the
		// vessel. The gui tags are suggested to define the minimum size of the text, to
		// avoid the dialog flickering when the resource is being transferred.
		// Argument <<1>> is the current amount of type CompactNumberType.
		// Argument <<1>> is the maximum amount (capacity) of type CompactNumberType.
		// Example usage:
		// 2.56 / 1,234
		#kasLOC_12003 = <<1>> / <<2>>
		// The information string that tells what is the selected or calculated tarnsfer
		// speed is.
		#kasLOC_12004 = Taxa de transferência atual: <<1>> unidades/segundo
		// The caption on the button that closes the trsnafer dialog.
		#kasLOC_12005 = Fechar diálogo
		// The string that tells which vessels owns the resource transfer part. Its stats
		// are displayed on the left side of the dialog.
		// Argument <<1>> is the name of the owner vessel.
		#kasLOC_12006 = Dono (esquerda): <<1>>
		// The string that tells which vessels is connected to the resource transfer part.
		// Its stats are displayed on the right side of the dialog.
		// Argument <<1>> is the name of the connected vessel.
		#kasLOC_12007 = Conectado (direita): <<1>>
		// The hint to explain the mixture of the fuel components to transfer.
		// Argument <<1>> is the comma-separated list of the component names.
		#kasLOC_12008 = Uma mistura dos componentes: <<1>>
		// The caption for the control that enables the mode, which automatically deducts
		// the speed of the reasource transfer.
		#kasLOC_12009 = Dimensionar transferência automaticamente
		// The GUI hint that explains what will happen if the auto-speed options is chosen.
		#kasLOC_12010 = A taxa será ajustada para que a transferência seja concluída em <<1>> segundos.
		// The hint text to explain the button action that starts transferring the resource
		// from the connected vessel to the owner of the resource transfer part.
		#kasLOC_12011 = Iniciar transferência da nave conectada para a dona
		// The hint text to explain the button action that does transferring the resource
		// from the connected vessel to the owner of the resource transfer part. When the
		// button is released, the transfer stops.
		#kasLOC_12012 = Transferir da nave conectada para a dona
		// The hint text to explain the button action that starts transferring the resource
		// from the owner of the resources transfer part to the connected vessel.
		#kasLOC_12013 = Iniciar transferência da nave dona para a conectada
		// The hint text to explain the button action that does transferring the resource
		// from the owner of the resource transfer part to the connected vessel. When the
		// button is released, the transfer stops.
		#kasLOC_12014 = Transferir da nave dona para a conectada
		// The message to present in the transfer dialog when the parts are docked. Hence,
		// the stock game functionality must be used to transfer the resources.
		#kasLOC_12016 = Indisponível no modo acoplado

		// ********** Type: KAS.KASLinkSourceBase, KSPDev Messages

		// Message to display when the target link type doesn't match the source type.
		#kasLOC_02000 = Tipo de ligação do alvo incompatível
		// Message to display when a source is refusing to start the link.
		#kasLOC_02001 = Fonte indisponível para ligações
		// Message to display when the target is refusing to accept the link.
		#kasLOC_02002 = Alvo não aceita ligações
		// Message to display when a linked source and target cannot be matched on load.
		// Argument <<1>> is a name of the SOURCE part.
		// Example usage:
		// Cannot restore link for: KAS.TJ1
		#kasLOC_02003 = Impossível restaurar ligação para: <<1>>
		// Info string in the editor for the link type setting.
		// Argument <<1>> is the type string from the part's config.
		#kasLOC_02004 = Ligações com soquete tipo: <<1>>
		// Title of the module to present in the editor details window.
		#kasLOC_02005 = Fonte de Junta SAK
		// The name of the part's context menu event that triggers a separtation of the
		// linked parts into two different vessels if they are coupled thru this link. At
		// the same time, the name of the event gives a currently selected state.
		#kasLOC_02006 = Modo de ligação: ACOPLADO
		// The name of the part's context menu event that triggers a merging of the linked
		// parts if they were not coupled before. At  the same time, the name of the event
		// gives a currently selected state.
		#kasLOC_02007 = Modo de ligação: DESACOPLADO

		// ********** Type: KAS.KASLinkSourceInteractive, KSPDev Messages

		// The message to display when a compatible target part is hovered over, and the
		// source is in the linking mode.
		// Argument <<1>> is the possible link length of type DistanceType.
		// Example usage:
		// Click to establish a link (length 1.22 m)
		#kasLOC_01000 = Clique para estabelecer uma ligação (Comprimento: <<1>>)
		// The message to display as a help string when an interactive linking mode has
		// started.
		#kasLOC_01001 = Selecione um soquete compatível ou aperte ESC
		// The message to present when the player requests a docking mode for the link via
		// UI, but the source or target part is rejecting the action.
		#kasLOC_01002 = Impossível acoplar: modo não suportado

		// ********** Type: KAS.KASLinkSourcePhysical, KSP Events

		// A context menu event that attaches the connector to the EVA kerbal.
		#kasLOC_13007 = Pegar conector
		// A context menu event that detaches the connector from the kerbal and puts it back
		// to the winch.
		#kasLOC_13008 = Devolver conector
		// Context menu item to break the currently established link.
		#kasLOC_13009 = Desencaixar conector
		// Advanced tweakable. Context menu item to instantly lock the deployed connector
		// into the base.
		#kasLOC_13010 = Travar conector

		// ********** Type: KAS.KASLinkSourcePhysical, KSP Fields

		// Status field to display the current winch connector status in the context menu.
		#kasLOC_13006 = Estado do conector

		// ********** Type: KAS.KASLinkSourcePhysical, KSPDev Messages

		// A string in the context menu that tells that the connector is rigidly attached to
		// the part and is not movable.
		#kasLOC_13000 = Travado
		// A string in the context menu that tells that the connector is deployed and
		// attached to the part via a cable.
		#kasLOC_13001 = Colocado
		// A string in the context menu that tells that the connector is plugged in a socked
		// or is being carried by a kerbal, and attached to the part via a cable.
		#kasLOC_13002 = Plugado
		// A string in the context menu that tells that the connector is rigidly attached in
		// the winch socked, and the vessel on the connector is docked to the part owner
		// vessel.
		#kasLOC_13003 = Acoplado
		// A message to display when a link between the part and the connector has broke due
		// to the unexpected external forces or actions.
		#kasLOC_13004 = A ligação entre o conector e a peça foi quebrada.
		// The error message to present when a part is being attached externally to the
		// source's attach node, and it's not a valid link target for the source.
		// Argument <<1>> is the name of the part being attached.
		#kasLOC_13005 = Impossível ligar com: <<1>>

		// ********** Type: KAS.KASLinkTargetBase, KSPDev Messages

		// Info string in the editor for the link type setting.
		// Argument <<1>> is the type string from the part's config.
		#kasLOC_03000 = Aceita ligações tipo: <<1>>
		// Title of the module to present in the editor details window.
		#kasLOC_03001 = Alvo de Junta SAK

		// ********** Type: KAS.KASLinkTargetKerbal, KSP Events

		// A context menu item that picks up the cable connector in range.
		#kasLOC_10000 = Pegar conector

		// ********** Type: KAS.KASLinkTargetKerbal, KSPDev Messages

		// A hint string, instructing what to press in order to drop the currently
		// carriedcable connector.
		// Argument <<1>> is the current key binding of type KeyboardEventType.
		// Example usage:
		// To drop the connector press: [Ctrl+Y]
		#kasLOC_100001 = Para soltar o conector aperte [<<1>>]
		// A hint string, instructing what to press in order to pickup a cable
		// connectorwhich is currently in range.
		// Argument <<1>> is the current key binding of typeKeyboardEventType.
		// Example usage:
		// [Y]: Pickup connector
		#kasLOC_100002 = [<<1>>]: Pegar conector
		// Context menu item that appear on the target part and transfers the EVA carried
		// connector to it.
		#kasLOC_10003 = Prender conector

		// ********** Type: KAS.KASLinkWinch, KSP Events

		// A context menu item that opens the remote control GUI to operate the winches in
		// the scene.
		#kasLOC_08010 = Abrir interface do guincho
		// A context menu item that sets the cable length to the maximum, and unlocks the
		// connector if it was locked.
		#kasLOC_08011 = Soltar cabo
		// A context menu event that sets the cable length to the current distance to the
		// connector.
		#kasLOC_08012 = Esticar instantaneamente

		// ********** Type: KAS.KASLinkWinch, KSP Fields

		// A context menu item that presents the length of the currently deployed cable.
		#kasLOC_08009 = Comprimento do cabo disposto

		// ********** Type: KAS.KASLinkWinch, KSPDev Messages

		// Error message to present when the electricity charge has exhausted.
		#kasLOC_08000 = Sem energia!
		// Error message to present when an improperly aligned cable connector has attempted
		// to lock with the winch.
		#kasLOC_08001 = Impossível travar o conector: não alinhado
		// Info message to present when a cable connector has successfully locked to the
		// winch.
		#kasLOC_08002 = Conector travado!
		// Info message to present when a cable connector has successfully docked to the
		// winch.
		#kasLOC_08003 = Conector acoplado ao guincho
		// An info message to present when the cable is extended at its maximum length.
		// Argument <<1>> is the current cable length of type DistanceType.
		// Example usage:
		// Maximum cable length reached: 1.23 m
		#kasLOC_08004 = Comprimento máximo do cabo alcançado: <<1>>
		// Name of the context menu item that stops the cable extending.
		#kasLOC_08005 = Parar extensão
		// Name of the context menu item that starts the cable extending.
		#kasLOC_08006 = Estender cabo
		// Name of the context menu item that stops the cable retracting.
		#kasLOC_08007 = Parar retração
		// Name of the context menu item that starts the cable retracting.
		#kasLOC_08008 = Retrair cabo
		// Title of the module to present in the editor details window.
		#kasLOC_08013 = Guincho SAK
		// Info string that tells how fast the winch can extend or retract the cable.
		// Argument <<1>> is the speed of type VelocityType.
		#kasLOC_08014 = Velocidade máxima do motor: <<1>>

		// ********** Type: KAS.KASRendererTelescopicPipe, KSP Events

		// A context menu item that expands a non-linked telescopic pipe to its maximum
		// length.
		#kasLOC_04002 = Estender ao máximo
		// A context menu item that shrinks a non-linked telescopic pipe to its minimum
		// length.
		#kasLOC_04003 = Retrair to mínimo

		// ********** Type: KAS.KASRendererTelescopicPipe, KSPDev Messages

		// Message to display when the link cannot be created due to an obstacle.
		// Argument <<1>> is the part that would collide with the proposed link.
		// Example usage:
		// Link collides with: Mk2 Cockpit
		#kasLOC_04000 = Ligação colide com: <<1>>
		// Message to display when the link strut orientation cannot be changed due to it
		// would hit the surface.
		#kasLOC_04001 = Ligação colide com a superfície

		// ********** Global strings

		// Small strut link type.
		#kasLOC_99000 = Cano-40
		// Small cable link type.
		#kasLOC_99001 = Cabo-10
		// Small hose link type.
		#kasLOC_99002 = Mangueira-30
		// Medium strut link type.
		#kasLOC_99003 = Cano-100
		// Medium cable link type.
		#kasLOC_99004 = Cabo-35
		// Medium hose link type.
		#kasLOC_99005 = Mangueira-70
		// Large strut link type.
		#kasLOC_99006 = Cano-150
		// Large cable link type.
		#kasLOC_99007 = Cabo-60
		// Large hose link type.
		#kasLOC_99008 = Mangueira-100

		// KAS parts filter in the editor.
		#kasLOC_99009 = Sistema de Anexos Kerbal
	}
}
