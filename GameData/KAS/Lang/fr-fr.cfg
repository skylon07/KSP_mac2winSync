// Version: 3
// Before changing the version, read the instructions in the en-us.cfg file!
// Author: Samche2000
// Last updated: 09/18/2018
//
// Ce fichier contient en commentaire un copier-coller de la version anglaise
// pour avoir une référence rapide au fichier original pendant tout le process
// de traduction
Localization
{
	fr-fr
	{

		// ********** Part: KAS.CH1

		#KAS_CH1_Part_title = AC-1 Attache de Câble
		#KAS_CH1_Part_manufacturer = KAS Labs, Inc.
		#KAS_CH1_Part_description = Un crochet sur lequel un câble peut se clipser. C’est l’autre moitié de la solution «garder-ces-trucs-ensemble».
		#KAS_CH1_Part_tags = KIS KAS câble corde attache cck-kas

		// ********** Part: KAS.JS1

		#KAS_JS1_Part_title = PM-1 Prise Multifonctions
		#KAS_JS1_Part_manufacturer = KAS Labs, Inc.
		#KAS_JS1_Part_description = Cette prise multifonctions présente de nombreuses fonctionnalités : elle permet une connexion ferme et permet le transfert de ressources ! Un ingénieur certifié possédant plusieurs années d'expérience est requis pour installer cette prise mais une fois connectée, même le concierge peut l'utiliser pour connecter n'importe quel vaisseau.
		#KAS_JS1_Part_tags = KIS KAS tuyau tube cck-kas

		// ********** Part: KAS.PCB1

		#KAS_PCB1_Part_title = TMP-1 Treuil Manuel Portable
		#KAS_PCB1_Part_manufacturer = KAS Labs, Inc.
		#KAS_PCB1_Part_description = C'est un simple treuil à commande manuelle avec une petite bobine de câble en acier qui vous permet de connecter des objets tant qu'ils ne sont pas trop loin. Il doit y avoir une prise sur l'autre vaisseau sur lequel attacher le câble. Autant dire que ce treuil ne résout que la moitié du problème.
		#KAS_PCB1_Part_tags = KIS KAS câble corde attache cck-kas
		#KAS_PCB1_Part_LinkBreak = Délier
		#KAS_PCB1_Part_LinkStart = Lier

		// ********** Part: KAS.PortPylon

		#KAS_PortPylon_Part_title = P-20 Pylône
		#KAS_PortPylon_Part_manufacturer = KAS Labs, Inc.
		#KAS_PortPylon_Part_description = Notre gamme de produits STR-1 a été un énorme succès ! Cependant, il y avait quelques plaintes ... Il s'avère que parfois, le tuyau n'est pas assez long ! Pour résoudre ce problème, une nouvelle pièce a été développée : un pylône léger avec une douille de tuyau intégrée, lui permettant d’agir comme une rallonge. Il est donc possible de transporter des ressources sur de longues distances mais pour ce faire, vous devrez peut-être construire des pylônes supplémentaires. Jeb voulait vraiment ajouter un réfrigérateur à Kerba-Cola à l'intérieur mais R & D dut rejeter sa suggestion en raison d'une limite de masse stricte de 20 kg.
		#KAS_PortPylon_Part_tags = KAS ressource carburant transfert cck-kas

		// ********** Part: KAS.PortPylonPwr

		#KAS_PortPylonPwr_Part_title = PS-400 Pylône sous Stéroïdes
		#KAS_PortPylonPwr_Part_manufacturer = KAS Labs, Inc.
		#KAS_PortPylonPwr_Part_description = Le design de cette pièce a été inspiré par le P-20. Nos ingénieurs avaient besoin de savoir : le volume interne du pylône pouvait-il vraiment être utilisé ? Il s'avère que ça peut ! En tant que tels, ils ont décidé de le remplir avec des piles Z-100 et un simple module de contrôle. Ce n'est pas aussi cool qu'un réfrigérateur à Kerba-Cola comme l'avait demandé Jeb mais c'est quand même très pratique. Soyez assurés que les batteries sont de la plus haute qualité et ne sont pas simplement récupérées de la casse.
		#KAS_PortPylonPwr_Part_tags = KAS ressource carburant transfert cck-kas

		// ********** Part: KAS.RTS1

		#KAS_RTS1_Part_title = STR-1 Station de Transfert de Ressources
		#KAS_RTS1_Part_manufacturer = KAS Labs, Inc.
		#KAS_RTS1_Part_description = Ce tuyau permet le transfert de ressources entre vaisseaux. Le diamètre n’est pas si impressionnant mais comme l’a dit un petit homme vert : "C'est pas la taille qui compte." Notre technologie brevetée permet le transfert de tout un nombre de choses à travers (y compris mais sans s'y limiter) : roches, carburant, en-cas et même kerbals. La garantie est annulée dans ce dernier cas.
		#KAS_RTS1_Part_tags = KIS KAS ressource carburant transfert cck-kas

		// ********** Part: KAS.TB60

		#KAS_TB60_Part_title = BR-60 Barre de Remorquage
		#KAS_TB60_Part_manufacturer = KAS Labs, Inc.
		#KAS_TB60_Part_description = Une solution simple pour remorquer un vaisseau qui ne peut pas se déplacer seul. Si une simple corde devait être utilisée, le vaisseau remorqué aurait probablement un impact sur la remorque lors du freinage ou de la manœuvre, mais ce n'est pas le cas avec la barre de remorquage. En outre, il peut aider à diriger le vaisseau remorqué, le cas échéant. Assurez-vous de garder les piles au frais, sinon la direction active ne fonctionnera pas.
		#KAS_TB60_Part_tags = KIS KAS tuyau tube remorque barre remorquage cck-kas
		#KAS_TB60_Part_LinkBreak = Déconnecter le vaisseau
		#KAS_TB60_Part_LinkStart = Attacher à un vaisseau
		#KAS_TB60_Part_Park_Forward = Park : DEVANT
		#KAS_TB60_Part_Park_Up = Park : HAUT

		// ********** Part: KAS.TJ1

		#KAS_TJ1_Part_title = JTF-1 Jambe Telescopique Fixe
		#KAS_TJ1_Part_manufacturer = KAS Labs, Inc.
		#KAS_TJ1_Part_description = Cette simple jambe télescopique peut relier de manière rigide deux vaisseaus. La distance de connexion maximale est assez courte, mais sa force est suffisante. La conception a été inspirée par un selfie-stick acheté par Jeb dans un magasin d'occasion.
		#KAS_TJ1_Part_tags = KIS KAS pipe tube cck-kas
		#KAS_TJ1_Part_LinkBreak = Déconnecter le vaisseau
		#KAS_TJ1_Part_LinkStart = Attacher à un vaisseau
		#KAS_TJ1_Part_Park_Down = Park: BAS
		#KAS_TJ1_Part_Park_Forward = Park: DEVANT
		#KAS_TJ1_Part_Park_Up = Park: HAUT

		// ********** Part: KAS.TJ2

		#KAS_TJ2_Part_title = JTF-2 Jambe Telescopique Fixe
		#KAS_TJ2_Part_manufacturer = KAS Labs, Inc.
		#KAS_TJ2_Part_description = C'est le même que le "Selfie Stick" TJ-1 sauf que les charnières sont déverrouillées. Vraiment la meilleure solution pour garder les vaisseaux connectés séparés les uns des autres sans toutefois restreindre excessivement leurs mouvements.
		#KAS_TJ2_Part_tags = KIS KAS tuyau tube cck-kas
		#KAS_TJ2_Part_LinkBreak = Déconnecter le vaisseau
		#KAS_TJ2_Part_LinkStart = Attacher à un vaisseau
		#KAS_TJ2_Part_Park_Down = Park: BAS
		#KAS_TJ2_Part_Park_Forward = Park: DEVANT
		#KAS_TJ2_Part_Park_Up = Park: HAUT

		// ********** Part: KAS.W1

		#KAS_W1_Part_title = T-50 Treuil
		#KAS_W1_Part_manufacturer = KAS Labs, Inc.
		#KAS_W1_Part_description = Un ancien sage a dit un jour: "Donnez-moi la bonne prise et avec un treuil, je tirerai Kerbin". Ce treuil n’est pas aussi puissant bien qu’il puisse soulever ou remorquer un vaisseau assez volumineux. N'oubliez pas de connecter une prise compatible sur le vaisseau cible. Assurez-vous également que le vaisseau actif soit suffisamment alimenté : le treuil a soif d'électricité !
		#KAS_W1_Part_tags = KIS KAS treuil câble connecteur cck-kas

		// ********** Part: KAS.W2

		#KAS_W2_Part_title = T-80 Treuil
		#KAS_W2_Part_manufacturer = KAS Labs, Inc.
		#KAS_W2_Part_description = Une version robuste du modèle de treuil T-50. Il dispose d'un câble supplémentaire et offre une résistance de connexion améliorée. Cependant, il ne peut toujours pas tirer Kerbin. Remarque : la garantie est annulée si les treuils sont utilisés pour tricoter les trolls, et ce, pour tout treuil ou troll.
		#KAS_W2_Part_tags = KIS KAS treuil câble connecteur solide cck-kas

		// ********** Type: KAS.AbstractJoint, KSPDev Messages

		// Message to display when the link cannot be established because it's too short.
		// Argument <<1>> is the current link length of type DistanceType.
		// Argument <<2>> is the part's config setting of type DistanceType.
		// Example usage:
		// Link is too short: 1.22 m < 2.33 m
		#kasLOC_00000 = Lien trop court : <<1>> < <<2>>
		// Message to display when the link cannot be established because it's too long.
		// Argument <<1>> is the current link length of type DistanceType.
		// Argument <<2>> is the part's config setting of type DistanceType.
		// Example usage:
		// Link is too long: 2.33 m > 1.22 m
		#kasLOC_00001 = Lien trop long : <<1>> > <<2>>
		// Message to display when the link cannot be established because the maximum angle
		// between the link vector and the joint normal at the SOURCE part is to big.
		// Argument <<1>> is the current link angle of type AngleType.
		// Argument <<2>> is the part's config setting of type AngleType.
		// Example usage:
		// Source angle limit reached: 3° > 2.5°
		#kasLOC_00002 = Limite d'angle de la source atteinte : <<1>> > <<2>>
		// Message to display when the link cannot be established because the maximum angle
		// between the link vector and the joint normal at the TARGET part is to big.
		// Argument <<1>> is the current link angle of type AngleType.
		// Argument <<2>> is the part's config setting of type AngleType.
		// Example usage:
		// Target angle limit reached: 3° > 2.5°
		#kasLOC_00003 = Limite d'angle atteinte : <<1>> > <<2>>
		// Info string in the editor for the link break force setting. The argument is of
		// type ForceType.
		// Example usage:
		// Link break force: 1.2 kN
		#kasLOC_00004 = Limite de rupture : <<1>>
		// Info string in the editor for the link break torque setting. The argument is of
		// type ForceType.
		// Example usage:
		// Link torque force: 1.2 kN
		#kasLOC_00005 = Limite de couple : <<1>>
		// Info string in the editor for the minimum link length setting.
		// Argument <<1>> is the part's config setting of type DistanceType.
		// Example usage:
		// Minimum link length: 1.22 m
		#kasLOC_00006 = Longueur minimale du lien : <<1>>
		// Info string in the editor for the maximum link length setting.
		// Argument <<1>> is the part's config setting of type DistanceType.
		// Example usage:
		// Maximum link length: 1.22 m
		#kasLOC_00007 = Longueur maximale du lien : <<1>>
		// Info string in the editor for the maximum allowed angle at the source.
		// Argument <<1>> is the part's config setting of type AngleType.
		// Example usage:
		// Source angle limit: 1.2°
		#kasLOC_00008 = Limite d'angle de la source : <<1>>
		// Info string in the editor for the maximum allowed angle at the target.
		// Argument <<1>> is the part's config setting of type AngleType.
		// Example usage:
		// Target angle limit: 1.2°
		#kasLOC_00009 = Limite d'angle : <<1>>
		// Title of the module to present in the editor details window.
		#kasLOC_00010 = KAS Jambe

		// ********** Type: KAS.AbstractPipeRenderer, KSPDev Messages

		// Message to display when the link cannot be created due to an obstacle.
		// Argument <<1>> is the part that would collide with the proposed link.
		// Example usage:
		// Link collides with: Mk2 Cockpit
		#kasLOC_07000 = Collision du lien avec : <<1>>
		// Message to display when the link strut orientation cannot be changed due to it
		// would hit the surface.
		#kasLOC_07001 = Collision du lien avec la surface

		// ********** Type: KAS.ControllerWinchRemote, KSPDev Messages

		// The title of the remote control dialog. It also gives a hint on the keyboard
		// sequence that brings the GUI up.
		// Argument <<1>> is the keyboard even of type KeyboardEventType.
		#kasLOC_11000 = Treuil télécommandé (<<1>>)
		// The caption of the button that triggers cable release.
		#kasLOC_11001 = Relâcher
		// The GUI hint to explain the effect of the release button.
		#kasLOC_11002 = Relâcher le connecteur et régler la longueur du câble au maximum
		// The caption of the button that stretches teeh cable.
		#kasLOC_11003 = Étendre
		// The GUI hint to explain the effect of the stretch button.
		#kasLOC_11004 = Set the cable length to the actual distance
		// The caption of the button that deatches the cable from the target.
		#kasLOC_11005 = Détacher
		// The GUI hint to explain the effect of the detach button.
		#kasLOC_11006 = Détacher le câble de la partie cible
		// The caption of the button that closes the GUI dialog.
		#kasLOC_11007 = Fermer
		// The GUI hint to explain the effect of the close button.
		#kasLOC_11008 = Fermer la fenêtre
		// The caption for the toggle control (button style) which tells if the winch should
		// be highlighted in the scene. It's better keep the text as short as possible.
		#kasLOC_11009 = H
		// The GUI hint to explain the effect of toggling the control.
		#kasLOC_11010 = Mettre en surbrillance le treuil dans la scène
		// The text for the winch status in which it cannot be remotely operated for any
		// reason.
		#kasLOC_11011 = <color=red>Déconnecté</color>
		// The GUI hint to explain the OFFLINE state.
		#kasLOC_11012 = Impossible de contacter le treuil. Le vaisseau est-il contrôlable ?
		// The text for the winch status that tells that the main winch attach node is
		// occupied by an incompatible (non-KAS) part.
		#kasLOC_11013 = <color=red>Blocked</color>
		// The GUI hint to explain the BLOCKED state.
		#kasLOC_11014 = Le noeud d'attache du treuil est bloqué par une autre pièce
		// The text for the winch status that tells that the cable connector is locked to
		// the winch, and the cable length is zero.
		#kasLOC_11015 = <color=#00ff00>Rétracté</color>
		// The GUI hint to explain the RETRACTED state.
		#kasLOC_11016 = Le connecteur est bloqué dans le treuil
		// The GUI hint of the button that triggers retracting of the cable. The cable will
		// be retracting until the motor status is changed or the connector get locked.
		#kasLOC_11017 = Commencer à rétracter le câble
		// The GUI hint of the button that triggers deploying of the cable. The cable will
		// be deploying until the motor status is changed.
		#kasLOC_11018 = Commencer à étendre le câble
		// The GUI hint of the button that retracts the cable. The cable will be retracting
		// as long as the button is pressed.
		#kasLOC_11019 = Rétractez le câble
		// The GUI hint of the button that extends the cable. The cable will be extending as
		// long as the button is pressed.
		#kasLOC_11020 = Étendre le câble
		// The GUI hint to show for the control that changes the motor speed. It's the
		// maximum speed which the motor can reach when retracting or extending the cable.
		#kasLOC_11021 = Réglage de la vitesse du moteur
		// The GUI hint to show for the area which displays two values: the deployed cable
		// length and the real distance between the winch and the target (connector or
		// part). The values are presented as a pair, separated by symbol '/'.
		#kasLOC_11022 = La longueur réelle / déployée du câble
		// The GUI hint to show for the area which displays two values: the current motro
		// speed and the maximum possible motor speed. The values are presented as a pair,
		// separated by symbol '/'.
		#kasLOC_11023 = Vitesse du moteur / Réglage de la vitesse du moteur
		// The string to present when the dialog is opened, but no KAS winches found in the
		// scene.
		#kasLOC_11024 = Aucun treuil trouvé dans la scène !
		// The formatter string for the cable lengths when the cable is *not* under strain.
		// I.e. its actual length is not greater than the winch allows.
		// Argument <<1>> is the length, allowed by the winch of type DistanceType.
		// Argument <<1>> is the real cable length of type DistanceType.
		#kasLOC_11025 = <<1>> / <<2>>
		// The formatter string for the cable lengths when the cable *is* under strain. I.e.
		// its actual length is greater than the winch allows.
		// Argument <<1>> is the length, allowed by the winch of type DistanceType.
		// Argument <<2>> is the real cable length of type DistanceType.
		#kasLOC_11026 = <<1>> / <color=magenta><<2>></color>
		// The formatter string for the winch motor speed.
		// Argument <<1>> is the current motor speed type VelocityType.
		// Argument <<2>> is the settings for the desired motor speed of type VelocityType.
		#kasLOC_11027 = <<1>> / <<2>>

		// ********** Type: KAS.KASJointCableBase, KSPDev Messages

		// Info string in the editor for the cable spring force setting.
		// Argument <<1>> is the force of type ForceType.
		// Example usage:
		// Spring force: 1.2 kN
		#kasLOC_09000 = Force de ressort : <<1>>
		// Title of the module to present in the editor details window.
		#kasLOC_09001 = KAS Câble

		// ********** Type: KAS.KASJointTowBar, KSP Events

		// A context menu event that starts the locking process on a linked vessel.
		#kasLOC_05014 = Démarrer le verrouillage
		// A context menu event that disables the locking of the tow bar joints and turns
		// off the active steering mode.
		#kasLOC_05015 = Débloquer le joint
		// A context menu event that enables the active steering mode.
		#kasLOC_05016 = Activer le pilotage actif
		// A context menu event that disables the active steering mode.
		#kasLOC_05017 = Désactiver le pilotage actif

		// ********** Type: KAS.KASJointTowBar, KSP Fields

		// A context menu item that displays the current status of the bar locking.
		#kasLOC_05010 = Statut de verrouillage
		// A context menu item that displays the current steering status.
		#kasLOC_05011 = État des commandes
		// A context menu item that displays and allows changing the strength of the
		// steering commands, that the tow bar sends to the linked vessel.
		#kasLOC_05012 = Sensibilité des commandes
		// A context menu item that displays and allows changing the direction of the
		// steering commands.
		#kasLOC_05013 = Commandes : Direction
		// The name of the active steering mode, in which the steering commands are sent to
		// the linked vessel in the exact form as they've emitted for the source vessel.
		#kasLOC_05018 = Normal
		// The name of the active steering mode, in which the steering commands are sent to
		// the linked vessel in the inverted form relative to the source vessel.
		#kasLOC_05019 = Inversé

		// ********** Type: KAS.KASJointTowBar, KSPDev Messages

		// Message to display when a tow bar is not locked but the locking process has been
		// started. The <<1>> argument shows the current locking error and is formatted as
		// an angle type.
		// Example usage:
		// Tow bar is locking: diff 1.5°
		#kasLOC_05000 = La barre de remorquage se verrouille : diff <<1>>
		// Message to display when a tow bar locking process successfully ends with locking.
		#kasLOC_05001 = Barre de remorquage verrouillée !
		// A string in the context menu that tells that the active steering mode is not
		// enabled.
		#kasLOC_05002 = Désactivé
		// A string in the context menu that tells that the active steering mode is ready
		// and working.
		#kasLOC_05003 = Activé
		// A string in the context menu that tells that the active steering mode cannot work
		// due to the bar's target vessel is currently under player's control.
		#kasLOC_05004 = La cible est le vaisseau actuel
		// A string in the context menu that tells that the active steering mode cannot work
		// due to the linked vessel is remotely controlled.
		#kasLOC_05005 = La cible est incontrôlable
		// A string in the context menu that tells that the active steering mode is
		// activated but cannot start working due to the constraints.
		#kasLOC_05006 = Non verrouillé
		// A string in the context menu that tells that the bar joints are unlocked.
		#kasLOC_05007 = Désactivé
		// A string in the context menu that tells that the bar joints are locked.
		#kasLOC_05008 = Bloqué
		// A string in the context menu that tells that the bar joints are unlocked but the
		// part is trying to lock them.
		#kasLOC_05009 = Bloquage

		// ********** Type: KAS.KASLinkResourceConnector, KSP Events

		// The context menu event that opens the resources transfer GUI.
		#kasLOC_12015 = Ouvrir la fenêtre

		// ********** Type: KAS.KASLinkResourceConnector, KSPDev Messages

		// The title of the resource transfer dialog.
		#kasLOC_12000 = Transfert de Ressources
		// The resource in the transfer options table. Its main purpose is dealing with the
		// Lingoona modifiers, applied to the resource name.
		// Argument <<1>> is the full localized resource name with the Lingoona modifiers
		// (if any).
		#kasLOC_12001 = <<1>>
		// The string to present for a fuel mixture component.
		// Argument <<1>> is the percent ratio of the component in the mixture of type
		// PercentType.
		// Argument <<2>> is the abbreviated localized resource name with the
		// Lingoonamodifiers (if any).
		// Example usage:
		// 45 % Ox
		#kasLOC_12002 = <<1>> <<2>>
		// The status string saying current and maximum amounts of the resource in the
		// vessel. The gui tags are suggested to define the minimum size of the text, to
		// avoid the dialog flickering when the resource is being transferred.
		// Argument <<1>> is the current amount of type CompactNumberType.
		// Argument <<1>> is the maximum amount (capacity) of type CompactNumberType.
		// Example usage:
		// 2.56 / 1,234
		#kasLOC_12003 = <<1>> / <<2>>
		// The information string that tells what is the selected or calculated tarnsfer
		// speed is.
		#kasLOC_12004 = Vitesse de transfert actuelle : <<1>> unités par seconde
		// The caption on the button that closes the trsnafer dialog.
		#kasLOC_12005 = Fermer la fenêtre
		// The string that tells which vessels owns the resource transfer part. Its stats
		// are displayed on the left side of the dialog.
		// Argument <<1>> is the name of the owner vessel.
		#kasLOC_12006 = Origine (gauche): <<1>>
		// The string that tells which vessels is connected to the resource transfer part.
		// Its stats are displayed on the right side of the dialog.
		// Argument <<1>> is the name of the connected vessel.
		#kasLOC_12007 = Connecté (droite): <<1>>
		// The hint to explain the mixture of the fuel components to transfer.
		// Argument <<1>> is the comma-separated list of the component names.
		#kasLOC_12008 = Un mélange de composants : <<1>>
		// The caption for the control that enables the mode, which automatically deducts
		// the speed of the reasource transfer.
		#kasLOC_12009 = Vitesse de transfert d'échelle automatique
		// The GUI hint that explains what will happen if the auto-speed options is chosen.
		#kasLOC_12010 = La vitesse sera réglée pour que le transfert soit complet dans <<1>> secondes
		// The hint text to explain the button action that starts transferring the resource
		// from the connected vessel to the owner of the resource transfer part.
		#kasLOC_12011 = Déclenchement du transfert du vaisseau connecté vers le vaisseau d'origine
		// The hint text to explain the button action that does transferring the resource
		// from the connected vessel to the owner of the resource transfer part. When the
		// button is released, the transfer stops.
		#kasLOC_12012 = Transfert depuis le vaisseau connecté vers le vaisseau d'origine
		// The hint text to explain the button action that starts transferring the resource
		// from the owner of the resources transfer part to the connected vessel.
		#kasLOC_12013 = Déclenchement du transfert du vaisseau d'origine vers le bateau connecté
		// The hint text to explain the button action that does transferring the resource
		// from the owner of the resource transfer part to the connected vessel. When the
		// button is released, the transfer stops.
		#kasLOC_12014 = Transfert du vaisseau d'origine au bateau relié
		// The message to present in the transfer dialog when the parts are docked. Hence,
		// the stock game functionality must be used to transfer the resources.
		#kasLOC_12016 = Non disponible en mode "docking"

		// ********** Type: KAS.KASLinkSourceBase, KSPDev Messages

		// Message to display when the target link type doesn't match the source type.
		#kasLOC_02000 = Type de lien cible incompatible
		// Message to display when a source is refusing to start the link.
		#kasLOC_02001 = La source n'est pas disponible pour un lien
		// Message to display when the target is refusing to accept the link.
		#kasLOC_02002 = La cible n'accepte pas les liens
		// Message to display when a linked source and target cannot be matched on load.
		// Argument <<1>> is a name of the SOURCE part.
		// Example usage:
		// Cannot restore link for: KAS.TJ1
		#kasLOC_02003 = Impossible de restaurer le lien pour : <<1>>
		// Info string in the editor for the link type setting.
		// Argument <<1>> is the type string from the part's config.
		#kasLOC_02004 = Liens avec le type de socket : <<1>>
		// Title of the module to present in the editor details window.
		#kasLOC_02005 = KAS Joint Source
		// The name of the part's context menu event that triggers a separtation of the
		// linked parts into two different vessels if they are coupled thru this link. At
		// the same time, the name of the event gives a currently selected state.
		#kasLOC_02006 = État du lien : CONNECTE
		// The name of the part's context menu event that triggers a merging of the linked
		// parts if they were not coupled before. At  the same time, the name of the event
		// gives a currently selected state.
		#kasLOC_02007 = État du lien : DECONNECTE

		// ********** Type: KAS.KASLinkSourceInteractive, KSPDev Messages

		// The message to display when a compatible target part is hovered over, and the
		// source is in the linking mode.
		// Argument <<1>> is the possible link length of type DistanceType.
		// Example usage:
		// Click to establish a link (length 1.22 m)
		#kasLOC_01000 = Cliquer pour établir un lien (longueur <<1>>)
		// The message to display as a help string when an interactive linking mode has
		// started.
		#kasLOC_01001 = Sélectionner une prise compatible ou appuyer sur ESC
		// The message to present when the player requests a docking mode for the link via
		// UI, but the source or target part is rejecting the action.
		#kasLOC_01002 = Impossible de se connecter : le mode n'est pas supporté

		// ********** Type: KAS.KASLinkSourcePhysical, KSP Events

		// A context menu event that attaches the connector to the EVA kerbal.
		#kasLOC_13007 = Connecteur de saisie
		// A context menu event that detaches the connector from the kerbal and puts it back
		// to the winch.
		#kasLOC_13008 = Connecteur de retour
		// Context menu item to break the currently established link.
		#kasLOC_13009 = Détacher le connecteur
		// Advanced tweakable. Context menu item to instantly lock the deployed connector
		// into the base.
		#kasLOC_13010 = Connecteur de verrouillage

		// ********** Type: KAS.KASLinkSourcePhysical, KSP Fields

		// Status field to display the current winch connector status in the context menu.
		#kasLOC_13006 = État du connecteur

		// ********** Type: KAS.KASLinkSourcePhysical, KSPDev Messages

		// A string in the context menu that tells that the connector is rigidly attached to
		// the part and is not movable.
		#kasLOC_13000 = Verrouillé
		// A string in the context menu that tells that the connector is deployed and
		// attached to the part via a cable.
		#kasLOC_13001 = Déployé
		// A string in the context menu that tells that the connector is plugged in a socked
		// or is being carried by a kerbal, and attached to the part via a cable.
		#kasLOC_13002 = Branché
		// A string in the context menu that tells that the connector is rigidly attached in
		// the winch socked, and the vessel on the connector is docked to the part owner
		// vessel.
		#kasLOC_13003 = Connecté
		// A message to display when a link between the part and the connector has broke due
		// to the unexpected external forces or actions.
		#kasLOC_13004 = Le lien entre le connecteur et la pièce s’est rompu
		// The error message to present when a part is being attached externally to the
		// source's attach node, and it's not a valid link target for the source.
		// Argument <<1>> is the name of the part being attached.
		#kasLOC_13005 = Impossible d'établir un lien avec : <<1>>

		// ********** Type: KAS.KASLinkTargetBase, KSPDev Messages

		// Info string in the editor for the link type setting.
		// Argument <<1>> is the type string from the part's config.
		#kasLOC_03000 = Accepte le type de lien : <<1>>
		// Title of the module to present in the editor details window.
		#kasLOC_03001 = KAS Joint Target

		// ********** Type: KAS.KASLinkTargetKerbal, KSP Events

		// A context menu item that picks up the cable connector in range.
		#kasLOC_10000 = Connecteur de ramassage

		// ********** Type: KAS.KASLinkTargetKerbal, KSPDev Messages

		// A hint string, instructing what to press in order to drop the currently
		// carriedcable connector.
		// Argument <<1>> is the current key binding of type KeyboardEventType.
		// Example usage:
		// To drop the connector press: [Ctrl+Y]
		#kasLOC_100001 = Pour déposer le connecteur, appuyez sur : [<<1>>]
		// A hint string, instructing what to press in order to pickup a cable
		// connectorwhich is currently in range.
		// Argument <<1>> is the current key binding of typeKeyboardEventType.
		// Example usage:
		// [Y]: Pickup connector
		#kasLOC_100002 = [<<1>>] : Ramasser le connecteur
		// Context menu item that appear on the target part and transfers the EVA carried
		// connector to it.
		#kasLOC_10003 = Attacher le connecteur

		// ********** Type: KAS.KASLinkWinch, KSP Events

		// A context menu item that opens the remote control GUI to operate the winches in
		// the scene.
		#kasLOC_08010 = Ouvrir la fenetre des treuils
		// A context menu item that sets the cable length to the maximum, and unlocks the
		// connector if it was locked.
		#kasLOC_08011 = Libérer cable
		// A context menu event that sets the cable length to the current distance to the
		// connector.
		#kasLOC_08012 = Étirement instantanné

		// ********** Type: KAS.KASLinkWinch, KSP Fields

		// A context menu item that presents the length of the currently deployed cable.
		#kasLOC_08009 = Longueur de câble déployée

		// ********** Type: KAS.KASLinkWinch, KSPDev Messages

		// Error message to present when the electricity charge has exhausted.
		#kasLOC_08000 = Plus d'énergie !
		// Error message to present when an improperly aligned cable connector has attempted
		// to lock with the winch.
		#kasLOC_08001 = Impossible de verrouiller le connecteur : non aligné
		// Info message to present when a cable connector has successfully locked to the
		// winch.
		#kasLOC_08002 = Connecteur verrouillé !
		// Info message to present when a cable connector has successfully docked to the
		// winch.
		#kasLOC_08003 = Connecteur amarré au treuil
		// An info message to present when the cable is extended at its maximum length.
		// Argument <<1>> is the current cable length of type DistanceType.
		// Example usage:
		// Maximum cable length reached: 1.23 m
		#kasLOC_08004 = Longueur maximale du câble atteinte : <<1>>
		// Name of the context menu item that stops the cable extending.
		#kasLOC_08005 = Arrêt de l'extension
		// Name of the context menu item that starts the cable extending.
		#kasLOC_08006 = Étendre le câble
		// Name of the context menu item that stops the cable retracting.
		#kasLOC_08007 = Arrêt du repli
		// Name of the context menu item that starts the cable retracting.
		#kasLOC_08008 = Replier le cable
		// Title of the module to present in the editor details window.
		#kasLOC_08013 = KAS Treuil
		// Info string that tells how fast the winch can extend or retract the cable.
		// Argument <<1>> is the speed of type VelocityType.
		#kasLOC_08014 = Vitesse max du moteur : <<1>>

		// ********** Type: KAS.KASRendererTelescopicPipe, KSP Events

		// A context menu item that expands a non-linked telescopic pipe to its maximum
		// length.
		#kasLOC_04002 = Etendu au maximum
		// A context menu item that shrinks a non-linked telescopic pipe to its minimum
		// length.
		#kasLOC_04003 = Replier au minimum

		// ********** Type: KAS.KASRendererTelescopicPipe, KSPDev Messages

		// Message to display when the link cannot be created due to an obstacle.
		// Argument <<1>> is the part that would collide with the proposed link.
		// Example usage:
		// Link collides with: Mk2 Cockpit
		#kasLOC_04000 = Collision du lien avec : <<1>>
		// Message to display when the link strut orientation cannot be changed due to it
		// would hit the surface.
		#kasLOC_04001 = Collision du lien avec la surface

		// ********** Global strings

		// Small strut link type.
		#kasLOC_99000 = Pipe-40
		// Small cable link type.
		#kasLOC_99001 = Cable-10
		// Small hose link type.
		#kasLOC_99002 = Hose-30
		// Medium strut link type.
		#kasLOC_99003 = Pipe-100
		// Medium cable link type.
		#kasLOC_99004 = Cable-35
		// Medium hose link type.
		#kasLOC_99005 = Hose-70
		// Large strut link type.
		#kasLOC_99006 = Pipe-150
		// Large cable link type.
		#kasLOC_99007 = Cable-60
		// Large hose link type.
		#kasLOC_99008 = Hose-100

		// KAS parts filter in the editor.
		#kasLOC_99009 = Kerbal Attachment System
	}
}
