KISConfig
{
	name = KISConfig
	Global
	{
		// If "true", then extar debugging options will be shown in the EVA inventory.
		itemDebug = false
		// If "false" then the hint texts over the KIS cursor will not be shown.
		showHintText = true
		// When this key is depressed, the hint text and cursor will be hidden.
		hideHintKey = G  // KeyCode type

		// You can totally disable inventory hotkeys or re-assign/disable a specific
		// slot.
		slotHotkeysEnabled = true
		// Set None value do disable a hotkey for a specific slot. E.g.:
		//slotHotkey1 = None
		// If no configuration set then default mapping is used: keys 1-9 are bound to
		// slots 1-9.
		slotHotkey1 = Alpha1
		slotHotkey2 = Alpha2
		slotHotkey3 = Alpha3
		slotHotkey4 = Alpha4
		slotHotkey5 = Alpha5
		slotHotkey6 = Alpha6
		slotHotkey7 = Alpha7
		slotHotkey8 = Alpha8
	}
	Debug
	{
		partAlignToolKey = // Put a keyboard event to enable (e.g. "&K" - Alt+K).
	}
	Compatibility
	{
		forbiddenPart = DeployedCentralStation
		forbiddenPart = DeployedGoExOb
		forbiddenPart = DeployedIONExp
		forbiddenPart = DeployedRTG
		forbiddenPart = DeployedSatDish
		forbiddenPart = DeployedSeismicSensor
		forbiddenPart = DeployedSolarPanel
		forbiddenPart = DeployedWeatherStn
	}
	EquipAliases
	{
		alias = aliasLeftPalm,**/bn_l_mid_a01
		alias = aliasLeftElbow,**/bn_l_elbow_a01
		alias = aliasRightPalm,**/bn_r_mid_a01
		alias = aliasRightElbow,**/bn_r_elbow_a01
		alias = aliasJetpack,**/bn_jetpack01
		alias = aliasHelmet,**/bn_helmet01
		alias = aliasHead,**/bn_upperJaw01
	}
        Editor
	{
		// Defines a mouse/keyboard combination to start parts dragging in the editor.
		// Even thiough you can set own modifiers, the mopuse button must always be LMB.
		// Usual KeyboardEvent modifiers are allowed: #, $, %, and &.
		editorPartGrabAction = mouse0
		//editorPartGrabAction = &mouse0  // Alt+LMB
		//editorPartGrabAction = &#mouse0  // Alt+Shift+LMB

		// Specifies default settings of every new inventory created in
		// the editor.
		PodInventory
		{
			// Specifies items to add to every pod's seat. To add
			// more items add more lines.
			//addToAllSeats = KIS.evapropellant

			// Specifies items to add to the first pod's seat only.
			//addToTheFirstSeatOnly = KIS.electricScrewdriver
		}

	}
	EvaInventory
	{
		inventoryKey = tab
		rightHandKey = x
		helmetKey = //j - J conflicts with Breaking Ground DLC.
		slotsX = 2
		slotsY = 4
		slotSize = 50
		itemIconResolution = 128
		selfIconResolution = 128
		maxVolume = 110
		openSndPath = KIS/Sounds/inventoryOpen
		closeSndPath = KIS/Sounds/inventoryClose
	}
	EvaPickup
	{
		grabKey = g	
		attachKey = h	
		redockKey = y
		allowPartAttach = false
		allowStaticAttach = false
		allowPartStack = false
		maxDistance = 3
		grabMaxMass = 1
		dropSndPath = KIS/Sounds/drop
		attachPartSndPath = KIS/Sounds/attachPart
		detachPartSndPath = KIS/Sounds/detachPart
		attachStaticSndPath= KIS/Sounds/attachStatic
		detachStaticSndPath = KIS/Sounds/detachStatic
		draggedIconResolution = 64
	}
	StackableModule
	{
		moduleName = ModuleActiveRadiator // stock radiator panels
		moduleName = ModuleLight // stock lights
		moduleName = ModuleDockingNode // stock docking ports
		moduleName = ModuleDecouple // stock docking ports and decouplers
		moduleName = ModuleToggleCrossfeed // stock docking ports and decouplers
		moduleName = ModuleEngines // stock, will touch only engines without shrouds
		moduleName = ModuleEnginesFX // stock, will touch only engines without shrouds
		moduleName = FXModuleAnimateThrottle // stock, engines
		moduleName = ModuleGimbal // stock
		moduleName = ModuleSurfaceFX // stock, engine animation
		moduleName = ModuleAlternator // stock engine
		moduleName = ModuleTestSubject // stock parts
		moduleName = ModuleAeroSurface // stock aero parts
		moduleName = ModuleLiftingSurface // stock aero parts
		moduleName = ModuleDragModifier // stock aero override
		moduleName = FXModuleLookAtConstraint // stock animated parts e.g. airbarkes, control surfaces
		moduleName = ModuleControlSurface // stock control surfaces
		moduleName = ModuleDeployableAntenna // stock comms
		moduleName = ModuleDataTransmitter // stock comms
		moduleName = ModuleAnimateHeat // stock heat animation
		moduleName = ModuleKerbNetAccess // stock, Kerbnet parts
		moduleName = ModuleAnimateGeneric // stock, animated parts
		moduleName = ModuleSAS // stock
		moduleName = ModuleRCS // stock RCS
		moduleName = ModuleRCSFX //stock RCS vernor module
		moduleName = ModuleGenerator //stock, does not touch overheatable parts
		moduleName = ModuleResourceConverter //stock, does not touch overheatable parts
		moduleName = RetractableLadder // stock
		moduleName = ModuleDeployableSolarPanel // lets you repair panels by stacking them
		moduleName = ModuleDeployableRadiator 
		moduleName = ModuleLandingLeg // lets you repair legs by stacking
		moduleName = ModuleJettison  // stock, engine fairings
		moduleName = ModuleCargoPart
		// KAS //
		moduleName = KASModuleStrut
		moduleName = KASModulePort
		moduleName = KASModuleMagnet
		moduleName = KASModuleHarpoon
		moduleName = KASModuleGrab
		moduleName = KASModuleAnchor
		moduleName = KASModuleContainer
		// Other mods //
		moduleName = USI_ModuleRecycleablePart // mod, USI Kolonization
		moduleName = ModuleWeldablePort // mod, Konstruction
		moduleName = ModuleDockingNodeNamed // mod, DockingPortAlignmentIndicator
		moduleName = CollisionFX // mod
		moduleName = SyncModuleControlSurface //mod, Atmosphere Autopilot
		moduleName = DPSoundFX // mod, Docking Port Sound FX
		moduleName = TweakScale // mod
		moduleName = TCAEngineInfo // Throttle Controlled Avionics
	}
	StackableItemOverride
	{
		partName = addWhatYouWantHere1
		partName = addWhatYouWantHere2
	}
	MainScreenTweaker
	{
		// Set it to false if you don't want your main menu changed.
		enabled = true
		// Set to true to see all object paths in the logs.
		logAllObjects = false
		// The main screen shown on the initial game load (Kerbin orbit).
		modelTweak
		{
			tweakName = OnOrbitRightKerbal
			modelNamePattern = OrbitScene/Kerbals/maleEVA_inverted
			itemName = KIS.bomb1
			itemName = KIS.Container1
		}
		modelTweak
		{
			tweakName = OnOrbitLeftKerbal
			modelNamePattern = OrbitScene/Kerbals/maleEVA_side
			itemName = ScienceBox
		}
		modelTweak
		{
			tweakName = OnOrbitMiddleKerbal
			modelNamePattern = OrbitScene/Kerbals/maleEVA_center
			itemName = KIS.electricScrewdriver
		}
		modelTweak
		{
			tweakName = OnOrbitFemaleKerbal
			modelNamePattern = OrbitScene/Kerbals/femaleEVA
			itemName = KIS.wrench
			itemName = KIS.guide
		}
		// The main screen shown when exiting a game session (Mun surface).
		modelTweak
		{
			tweakName = OnMunLoneKerbal
			modelNamePattern = MunScene/Kerbals/maleEVA
			matchMeshesBySuffix = false
			itemName = KIS.electricScrewdriver
			itemName = KIS.Container1
		}
	}
}
